#[allow(non_camel_case_types)]
#[derive(Debug, Eq, PartialEq)]
pub enum InstructionOpcode {
    SPECIAL,
    REGIMM,
    J,
    JAL,
    BEQ,
    BNE,
    BLEZ,
    BGTZ,
    ADDI,
    ADDIU,
    SLTI,
    SLTIU,
    ANDI,
    ORI,
    XORI,
    AUI,
    COP0,
    COP1,
    COP2,
    COP1X,
    BEQL,
    BNEL,
    BLEZL,
    BGTZL,
    SPECIAL2,
    JALX,
    SPECIAL3,
    LB,
    LH,
    LWL,
    LW,
    LBU,
    LHU,
    LWR,
    SB,
    SH,
    SWL,
    SW,
    SWR,
    CACHE,
    LL,
    LWC1,
    BC,
    //LWC2, see translation function
    PREF,
    LDC1,
    LDC2,
    SC,
    SWC1,
    BALC,
    PCREL,
    SDC1,
    SDC2,
}

pub fn translate_opcode(opcode: u32) -> InstructionOpcode {
    match opcode {
        0b000000 => InstructionOpcode::SPECIAL,
        0b000001 => InstructionOpcode::REGIMM,
        0b000010 => InstructionOpcode::J,
        0b000011 => InstructionOpcode::JAL,
        0b000100 => InstructionOpcode::BEQ,
        0b000101 => InstructionOpcode::BNE,
        0b000110 => InstructionOpcode::BLEZ,
        0b000111 => InstructionOpcode::BGTZ,
        0b001000 => InstructionOpcode::ADDI,
        0b001001 => InstructionOpcode::ADDIU,
        0b001010 => InstructionOpcode::SLTI,
        0b001011 => InstructionOpcode::SLTIU,
        0b001100 => InstructionOpcode::ANDI,
        0b001101 => InstructionOpcode::ORI,
        0b001110 => InstructionOpcode::XORI,
        0b001111 => InstructionOpcode::AUI,
        0b010000 => InstructionOpcode::COP0,
        0b010001 => InstructionOpcode::COP1,
        0b010010 => InstructionOpcode::COP2,
        0b010011 => InstructionOpcode::COP1X,
        0b010100 => InstructionOpcode::BEQL,
        0b010101 => InstructionOpcode::BNEL,
        0b010110 => InstructionOpcode::BLEZL,
        0b010111 => InstructionOpcode::BGTZL,
        0b011100 => InstructionOpcode::SPECIAL2,
        0b011101 => InstructionOpcode::JALX,
        0b011111 => InstructionOpcode::SPECIAL3,
        0b100000 => InstructionOpcode::LB,
        0b100001 => InstructionOpcode::LH,
        0b100010 => InstructionOpcode::LWL,
        0b100011 => InstructionOpcode::LW,
        0b100100 => InstructionOpcode::LBU,
        0b100101 => InstructionOpcode::LHU,
        0b100110 => InstructionOpcode::LWR,
        0b101000 => InstructionOpcode::SB,
        0b101001 => InstructionOpcode::SH,
        0b101010 => InstructionOpcode::SWL,
        0b101011 => InstructionOpcode::SW,
        0b101110 => InstructionOpcode::SWR,
        0b101111 => InstructionOpcode::CACHE,
        0b110000 => InstructionOpcode::LL,
        0b110001 => InstructionOpcode::LWC1,
        0b110010 => InstructionOpcode::BC,
       // 0b110010 => InstructionOpcode::LWC2,   this instruction was moved in R6 under COP2
        0b110011 => InstructionOpcode::PREF,
        0b110101 => InstructionOpcode::LDC1,
        0b110110 => InstructionOpcode::LDC2,
        0b111000 => InstructionOpcode::SC,
        0b111001 => InstructionOpcode::SWC1,
        0b111010 => InstructionOpcode::BALC,
        0b111011 => InstructionOpcode::PCREL,
        0b111101 => InstructionOpcode::SDC1,
        0b111110 => InstructionOpcode::SDC2,
        _ => {
            panic!("Unknown opcode {:06b}.")
        }
    }
}
